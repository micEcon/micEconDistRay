
R version 4.2.3 (2023-03-15) -- "Shortstop Beagle"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "micEconDistRay" )
> 
> # load and prepare data set 
> data( germanFarms, package = "micEcon" )
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> ### Cobb-Douglas ray-based input distance function
> estCD <- distRayEst( xNames = c( "land", "qLabor", "qVarInput" ),
+   yNames = c( "vCrop", "vAnimal" ),
+   data = germanFarms, form = "cd" )
> cbind( round( coef( estCD ), 2 ) )
                [,1]
(Intercept)     3.03
alpha_1        -0.12
alpha_2         0.99
beta_1         -0.62
beta_2         -0.27
Zu_(Intercept) -6.56
Zv_(Intercept) -8.00
> cbind( names( estCD ) )
      [,1]          
 [1,] "call"        
 [2,] "formula"     
 [3,] "S"           
 [4,] "typeSfa"     
 [5,] "Nobs"        
 [6,] "nXvar"       
 [7,] "scaling"     
 [8,] "logDepVar"   
 [9,] "nuZUvar"     
[10,] "nvZVvar"     
[11,] "nParm"       
[12,] "udist"       
[13,] "startVal"    
[14,] "dataTable"   
[15,] "olsParam"    
[16,] "olsStder"    
[17,] "olsSigmasq"  
[18,] "olsLoglik"   
[19,] "olsSkew"     
[20,] "olsM3Okay"   
[21,] "CoelliM3Test"
[22,] "AgostinoTest"
[23,] "isWeights"   
[24,] "optType"     
[25,] "nIter"       
[26,] "optStatus"   
[27,] "startLoglik" 
[28,] "mlLoglik"    
[29,] "mlParam"     
[30,] "gradient"    
[31,] "gradL_OBS"   
[32,] "gradientNorm"
[33,] "invHessian"  
[34,] "hessianType" 
[35,] "mlDate"      
[36,] "coefList"    
[37,] "ela"         
[38,] "mono"        
> lapply( estCD$coefList, function(x) round( x, 3 ) )
$alpha0
(Intercept) 
      3.031 

$alphaVec
[1] -0.119  0.988  0.132

$betaVec
[1] -0.624 -0.267

> apply( estCD$mono, 2, table )
  x_1   x_2   x_3   y_1   y_2 all_x all_y   all 
   20    20    20    20    20    20    20    20 
> lapply( estCD$ela, function(x) round( summary(x), 2 ) )
$ela_x_1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -0.12   -0.12   -0.12   -0.12   -0.12   -0.12 

$ela_x_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.99    0.99    0.99    0.99    0.99    0.99 

$ela_x_3
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.13    0.13    0.13    0.13    0.13    0.13 

$ela_y_1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.13    0.14    0.15    0.15    0.15    0.16 

$ela_y_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -0.43   -0.42   -0.41   -0.41   -0.41   -0.39 

$ela_scale
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   3.75    3.75    3.75    3.75    3.75    3.75 

> 
> # calculate elasticities
> elaCD <- distRayEla( xNames = c( "land", "qLabor", "qVarInput" ),
+   yNames = c( "vCrop", "vAnimal" ),
+   coef = coef( estCD ), data = germanFarms, form = "cd" )
> all.equal( elaCD, estCD$ela )
[1] TRUE
> lapply( elaCD, function(x) round( summary(x), 2 ) )
$ela_x_1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -0.12   -0.12   -0.12   -0.12   -0.12   -0.12 

$ela_x_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.99    0.99    0.99    0.99    0.99    0.99 

$ela_x_3
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.13    0.13    0.13    0.13    0.13    0.13 

$ela_y_1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.13    0.14    0.15    0.15    0.15    0.16 

$ela_y_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -0.43   -0.42   -0.41   -0.41   -0.41   -0.39 

$ela_scale
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   3.75    3.75    3.75    3.75    3.75    3.75 

> 
> # calculate derivatives
> derivCD <- distRayDeriv( xNames = c( "land", "qLabor", "qVarInput" ),
+   yNames = c( "vCrop", "vAnimal" ),
+   coef = coef( estCD ), data = germanFarms, form = "cd" )
> lapply( derivCD, function(x) round( summary(x), 
+   3 - round( log( max( abs( x ) ), 10 ) ) ) )
$d_x_1
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-0.00521 -0.00486 -0.00449 -0.00435 -0.00388 -0.00306 

$d_x_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  0.614   0.628   0.657   0.657   0.686   0.717 

$d_x_3
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.0001729 0.0001885 0.0001948 0.0001993 0.0002091 0.0002418 

$d_y_1
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
3.65e-06 4.20e-06 4.90e-06 5.05e-06 5.64e-06 7.36e-06 

$d_y_2
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-5.53e-06 -4.62e-06 -3.93e-06 -4.13e-06 -3.58e-06 -3.22e-06 

> 
> 
> ### Translog ray-based input distance function
> estTL <- suppressWarnings( distRayEst( xNames = c( "land", "qLabor", "qVarInput" ),
+   yNames = c( "vCrop", "vAnimal" ),
+   data = germanFarms ) )
> cbind( round( coef( estTL ), 2 ) )
                  [,1]
(Intercept)     -31.81
alpha_1        -103.48
alpha_2         165.66
beta_1         -235.85
beta_2           89.95
alpha_1_1        -2.98
alpha_1_2       -14.47
alpha_2_2        56.87
beta_1_1        144.84
beta_1_2          1.15
beta_2_2         -1.30
psi_1_1          14.61
psi_1_2          -1.06
psi_2_1         -13.75
psi_2_2          13.17
Zu_(Intercept)   -6.75
Zv_(Intercept)  -35.39
> cbind( names( estTL ) )
      [,1]          
 [1,] "call"        
 [2,] "formula"     
 [3,] "S"           
 [4,] "typeSfa"     
 [5,] "Nobs"        
 [6,] "nXvar"       
 [7,] "scaling"     
 [8,] "logDepVar"   
 [9,] "nuZUvar"     
[10,] "nvZVvar"     
[11,] "nParm"       
[12,] "udist"       
[13,] "startVal"    
[14,] "dataTable"   
[15,] "olsParam"    
[16,] "olsStder"    
[17,] "olsSigmasq"  
[18,] "olsLoglik"   
[19,] "olsSkew"     
[20,] "olsM3Okay"   
[21,] "CoelliM3Test"
[22,] "AgostinoTest"
[23,] "isWeights"   
[24,] "optType"     
[25,] "nIter"       
[26,] "optStatus"   
[27,] "startLoglik" 
[28,] "mlLoglik"    
[29,] "mlParam"     
[30,] "gradient"    
[31,] "gradL_OBS"   
[32,] "gradientNorm"
[33,] "invHessian"  
[34,] "hessianType" 
[35,] "mlDate"      
[36,] "coefList"    
[37,] "ela"         
[38,] "mono"        
> lapply( estTL$coefList, function(x) round( x, 3 ) )
$alpha0
(Intercept) 
    -31.809 

$alphaVec
[1] -103.477  165.664  -61.187

$betaVec
[1] -235.853   89.951

$alphaMat
        [,1]    [,2]    [,3]
[1,]  -2.978 -14.469  17.447
[2,] -14.469  56.871 -42.402
[3,]  17.447 -42.402  24.955

$betaMat
        [,1]   [,2]
[1,] 144.838  1.149
[2,]   1.149 -1.304

$psiMat
        [,1]    [,2]
[1,]  14.606  -1.058
[2,] -13.750  13.171
[3,]  -0.856 -12.113

> apply( estTL$mono, 2, table )
      x_1 x_2 x_3 y_1 y_2 all_x all_y all
FALSE   5   8   8   6   6    18    12  19
TRUE   15  12  12  14  14     2     8   1
> lapply( estTL$ela, function(x) round( summary(x), 2 ) )
$ela_x_1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -0.68    0.08    0.63    0.62    1.18    1.85 

$ela_x_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -2.92   -0.95    0.36    0.31    1.86    3.08 

$ela_x_3
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -2.19   -1.11    0.19    0.07    0.74    3.71 

$ela_y_1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -1.30   -0.78   -0.28   -0.33    0.06    1.09 

$ela_y_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -2.09   -0.68   -0.44   -0.22    0.01    3.03 

$ela_scale
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 -25.88    0.53    1.04    0.15    1.77    6.47 

> 
> # calculate elasticities
> elaTL <- distRayEla( xNames = c( "land", "qLabor", "qVarInput" ),
+   yNames = c( "vCrop", "vAnimal" ),
+   coef = coef( estTL ), data = germanFarms )
> all.equal( elaTL, estTL$ela )
[1] TRUE
> lapply( elaTL, function(x) round( summary(x), 2 ) )
$ela_x_1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -0.68    0.08    0.63    0.62    1.18    1.85 

$ela_x_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -2.92   -0.95    0.36    0.31    1.86    3.08 

$ela_x_3
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -2.19   -1.11    0.19    0.07    0.74    3.71 

$ela_y_1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -1.30   -0.78   -0.28   -0.33    0.06    1.09 

$ela_y_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -2.09   -0.68   -0.44   -0.22    0.01    3.03 

$ela_scale
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 -25.88    0.53    1.04    0.15    1.77    6.47 

> 
> # calculate derivatives
> derivTL <- distRayDeriv( xNames = c( "land", "qLabor", "qVarInput" ),
+   yNames = c( "vCrop", "vAnimal" ),
+   coef = coef( estTL ), data = germanFarms )
> lapply( derivTL, function(x) round( summary(x), 
+   3 - round( log( max( abs( x ) ), 10 ) ) ) )
$d_x_1
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
-0.0203  0.0032  0.0225  0.0234  0.0435  0.0669 

$d_x_2
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 -1.828  -0.632   0.237   0.209   1.219   2.154 

$d_x_3
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-0.00362 -0.00174  0.00024  0.00005  0.00120  0.00488 

$d_y_1
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-7.40e-05 -2.62e-05 -8.70e-06 -1.24e-05  2.40e-06  4.30e-05 

$d_y_2
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-1.60e-05 -6.80e-06 -4.30e-06 -1.00e-06  1.00e-07  4.12e-05 

> 
> proc.time()
   user  system elapsed 
  2.893   0.109   2.994 
